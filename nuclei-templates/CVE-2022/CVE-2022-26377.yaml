id: CVE-2022-26377

info:
  name: Apache HTTP Server AJP Request Smuggling Vulnerability
  author: ProjectDiscoveryAI
  severity: high
  description: Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling') vulnerability in mod_proxy_ajp of Apache HTTP Server allows an attacker to smuggle requests to the AJP server it forwards requests to. This issue affects Apache HTTP Server Apache HTTP Server 2.4 version 2.4.53 and prior versions.
  impact: |
    An attacker could exploit this vulnerability to bypass security restrictions, perform unauthorized actions, or conduct further attacks.
  remediation: |
    Apply the necessary patch or upgrade to a non-vulnerable version of the Apache HTTP Server.
  reference:
    - https://github.com/watchtowrlabs/ibm-qradar-ajp_smuggling_CVE-2022-26377_poc
    - https://www.ibm.com/support/pages/node/7145265
    - http://www.openwall.com/lists/oss-security/2022/06/08/2
    - https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/7QUGG2QZWHTITMABFLVXA4DNYUOTPWYQ/
    - https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YPY2BLEVJWFH34AX77ZJPLD2OOBYR6ND/
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N
    cvss-score: 7.5
    cve-id: CVE-2022-26377
    cwe-id: CWE-444
    epss-score: 0.00638
    epss-percentile: 0.79784
    cpe: cpe:2.3:a:apache:http_server:*:*:*:*:*:*:*:*
  metadata:
    vendor: apache
    product: http_server
    shodan-query: Apache 2.4.49
    fofa-query:
      - title="apache http server test page powered by centos"
      - title="apache+default","apache+http+server+test","apache2+it+works"
      - title="apache2 debian default page:"
      - title="test page for the ssl/tls-aware apache installation on web site"
    google-query:
      - intitle:"apache http server test page powered by centos"
      - intitle:"apache+default","apache+http+server+test","apache2+it+works"
      - intitle:"apache2 debian default page:"
      - intitle:"test page for the ssl/tls-aware apache installation on web site"

http:
  - method: POST
    path:
      - "{{BaseURL}}/path/to/vulnerable/endpoint"

    headers:
      Content-Type: "application/x-www-form-urlencoded"

    body: "malicious_payload={{base64('malicious payload')}}"
    matchers:
      - type: word
        words:
          - "Redirects users to a malicious website or page"
        part: body
