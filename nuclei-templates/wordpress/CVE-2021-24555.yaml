id: CVE-2021-24555

info:
  name: >
    Diary & Availability Calendar <= 1.0.3 - Authenticated (Subscriber+) SQL Injection
  author: topscoder
  severity: low
  description: >
    The daac_delete_booking_callback function, hooked to the daac_delete_booking AJAX action, takes the id POST parameter which is passed into the SQL statement without proper sanitisation, validation or escaping, leading to a SQL Injection issue. Furthermore, the ajax action is lacking any CSRF and capability check, making it available to any authenticated user.
  reference:
    - https://github.com/topscoder/nuclei-wordfence-cve
    - https://www.wordfence.com/threat-intel/vulnerabilities/id/e7e83cee-f2c6-4de0-8801-fb63398f98fc?source=api-prod
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 8.8
    cve-id: CVE-2021-24555
  metadata:
    fofa-query: "wp-content/plugins/diary-availability-calendar/"
    google-query: inurl:"/wp-content/plugins/diary-availability-calendar/"
    shodan-query: 'vuln:CVE-2021-24555'
  tags: cve,wordpress,wp-plugin,diary-availability-calendar,low

http:
  - method: GET
    redirects: true
    max-redirects: 3
    path:
      - "{{BaseURL}}/wp-content/plugins/diary-availability-calendar/readme.txt"

    extractors:
      - type: regex
        name: version
        part: body
        group: 1
        internal: true
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

      - type: regex
        name: version
        part: body
        group: 1
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "diary-availability-calendar"
        part: body

      - type: dsl
        dsl:
          - compare_versions(version, '<= 1.0.3')