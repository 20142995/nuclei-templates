id: CVE-2015-6828

info:
  name: >
    SecureMoz Security Audit <= 1.0.5 - PHP Object Injection
  author: topscoder
  severity: medium
  description: >
    The tweet_info function in class/__functions.php in the SecureMoz Security Audit plugin 1.0.5 and earlier for WordPress does not use an HTTPS session for downloading serialized data, which allows man-in-the-middle attackers to conduct PHP object injection attacks and execute arbitrary PHP code by modifying the client-server data stream.
  reference:
    - https://github.com/topscoder/nuclei-wordfence-cve
    - https://www.wordfence.com/threat-intel/vulnerabilities/id/e0a294c5-dc2f-4739-9519-ae2a1268ff55?source=api-prod
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 6.6
    cve-id: CVE-2015-6828
  metadata:
    fofa-query: "wp-content/plugins/securemoz-security-audit/"
    google-query: inurl:"/wp-content/plugins/securemoz-security-audit/"
    shodan-query: 'vuln:CVE-2015-6828'
  tags: cve,wordpress,wp-plugin,securemoz-security-audit,medium

http:
  - method: GET
    redirects: true
    max-redirects: 3
    path:
      - "{{BaseURL}}/wp-content/plugins/securemoz-security-audit/readme.txt"

    extractors:
      - type: regex
        name: version
        part: body
        group: 1
        internal: true
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

      - type: regex
        name: version
        part: body
        group: 1
        regex:
          - "(?mi)Stable tag: ([0-9.]+)"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "securemoz-security-audit"
        part: body

      - type: dsl
        dsl:
          - compare_versions(version, '<= 1.0.5')